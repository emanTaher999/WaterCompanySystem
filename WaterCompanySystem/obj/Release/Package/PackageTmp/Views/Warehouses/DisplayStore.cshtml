@model WaterCompanySystem.Models.Warehouse
@{
    ViewBag.Title = "DisplayStore";
}


<div class="title-header">
    <h2 class="d-flex justify-content-center "><i class="mx-2 my-auto fa fa-hand-holding-water"></i>@WaterCompanySystem.Resourses.Page.DisplayStore</h2>

</div>
<br />


<fieldset class="card p-4 shadow">
    <legend class="bg-custom shadow  px-3">@WaterCompanySystem.Resourses.Page.View</legend>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row my-2">

                <div class="col-md-4">
                    @Html.Label(@WaterCompanySystem.Resourses.Page.suplier_type_id)
                    <div>
                        @Html.DropDownList("suplier_type_id", ViewBag.suplier_type_id as SelectList, "......... Select ............", new { @class = "form-control", id = "suplier_type_id" })
                        @Html.ValidationMessageFor(model => model.bottel_type_id, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.Label(@WaterCompanySystem.Resourses.Page.quantity)
                    <div>
                        @Html.TextBox("quantity", "", new { @class = "form-control", id = "quantity", name = "quantity" })

                        @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.Label(@WaterCompanySystem.Resourses.Page.quantity_in_Store)
                    <div>
                        @Html.TextBox("StoreQuantity", "", new { @class = "form-control", id = "StoreQuantity", name = "StoreQuantity" })

                    </div>
                </div>
            </div>
            <br />
            <div align="center">

                @*<input type="submit" value="Search" id="CreateButton" class="btn btn-primary" />*@
                <a href="/Warehouses/GetStoreInfoBySyplierDataReportIndex" class="btn btn-dark justify-content-end">@WaterCompanySystem.Resourses.Page.ExportReport</a>


            </div>
        </div>
    }
</fieldset>


<script>
        $(document).ready(function () {
    // Function to initialize or update the Chart.js chart
            function initializeChart(storequantity) {
        var ctx = document.getElementById('myChart');

        if (!ctx) {
            console.error('Canvas element with id "myChart" not found.');
            return;
        }

        ctx = ctx.getContext('2d'); // Get the 2D context

        if (window.myChart instanceof Chart) {
            window.myChart.destroy(); // Destroy existing chart instance to avoid duplication
        }

        // Check if price is a valid number
                if (isNaN(storeQuantity)) {
                    console.error('Invalid StoreQuantity value:', storeQuantity);
            return;
        }

        window.myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['StoreQuantity'],
                datasets: [{
                    label: 'StoreQuantity Value',
                    data: [StoreQuantity],
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        }

        //GetPriceAndSuplier
            $('#suplier_type_id').on('change', function () {
        var suplierTypeId = $(this).val();

        if (suplierTypeId) {
            $.ajax({
                url: '@Url.Action("GetStoreInfo", "Warehouses")',
                type: 'GET',
                data: { suplier_type_id: suplierTypeId },
                              success: function (response) {
                    if (response.Expence_Rev_Amount !== null) {
                        $('#quantity').val(response.quantity);
                        initializeChart(response.quantity);
                        $('#StoreQuantity').val(response.StoreQuantity);
                        initializeChart(response.StoreQuantity);

                    } else {
                        $('#quantity').val('');
                        alert('quantity not found for the selected supplier type.');
                        $('#StoreQuantity').val('');
                        alert('StoreQuantity not found for the selected supplier type.');
                        $('#Income_Amount').val('');
                    }
                },
                error: function () {
                    alert('Error fetching StoreQuantity. Please try again.');
                }
            });
        } else {
            $('#quantity').val('');
            $('#StoreQuantity').val('');
       
        }
    });
});
</script>

